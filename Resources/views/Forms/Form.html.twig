{% extends "SergsxmUIBundle:Layout:Layout.html.twig" %}

{% block content %}
<form action="{{action}}" enctype="{{encType}}" method="post" name="{{formId}}" id="{{formId}}">
    <div class="row">
        <div class="col-lg-9 col-md-9 col-sm-12 col-xs-12">
            <h1>{{title | default('')}}</h1>
            {% include defaultTemplate %}
            {% if captcha is defined %}
                {% include captcha['defaultTemplate'] with captcha only %}
            {% endif %}
            {{rest | raw}}
        </div>
        <div class="col-lg-3 col-md-3 hidden-sm hidden-xs">
                <div>
                    <div class="sergsxmui-tabs-navbar-buttons">
                        {% if readOnly == false %}
                            {% if backUrl is defined %}<button type="submit" class="btn btn-primary" name="back" value="true">{% trans from "sergsxmui" %}Save{% endtrans %}</button>{% endif %}
                            <button type="submit" class="btn btn-default">{% trans from "sergsxmui" %}Apply{% endtrans %}</button>
                        {% endif %}
                        {% if backUrl is defined %}<a href="{{backUrl}}" class="btn btn-default">{% trans from "sergsxmui" %}Cancel{% endtrans %}</a>{% endif %}
                    </div>
                    <ul class="nav nav-pills nav-stacked">
                        {% for group in groups %}
                            {% if group.description != '' %}
                                <li><a href="#{{group.groupId}}">{{group.description}}</a></li>
                            {% endif %}
                        {% endfor %}
                    </ul>
                </div>
        </div>
        <div class="hidden-lg hidden-md col-sm-12 col-xs-12">
            {% if readOnly == false %}
                {% if backUrl is defined %}<button type="submit" class="btn btn-primary" name="back" value="true">{% trans from "sergsxmui" %}Save{% endtrans %}</button>{% endif %}
                <button type="submit" class="btn btn-default">{% trans from "sergsxmui" %}Apply{% endtrans %}</button>
            {% endif %}
            {% if backUrl is defined %}<a href="{{backUrl}}" class="btn btn-default">{% trans from "sergsxmui" %}Cancel{% endtrans %}</a>{% endif %}
        </div>
    </div>
</form>
{% endblock %}            
{% block javascripts %}
    {{ parent() }}
        
    <script>
        function formValidation_{{formId}} (element, log) {
            var form = document.forms['{{formId}}'];
            var errors = {};
            {{jsValidation | raw}}
            if (element != undefined) {
                var inputId = ($(element).data('replace-input-id') ? $(element).data('replace-input-id') : $(element).prop('id')), inputName = ($(element).data('replace-input-name') ? $(element).data('replace-input-name') : $(element).prop('name'));
                
                if (errors[inputName] != undefined) {
                    $('.'+inputId+'-container').addClass('has-error');
                    $('.'+inputId+'-error').text(errors[inputName]);
                } else {
                    $('.'+inputId+'-container').removeClass('has-error');
                    $('.'+inputId+'-error').text('');
                }
            } else {
                $('#{{formId}} .has-error').removeClass('has-error');
                $('#{{formId}} .form-error-text').text('');
                for (var input in errors) {
                    var inputId = ($(form[input]).data('replace-input-id') ? $(form[input]).data('replace-input-id') : $(form[input]).prop('id'));
                    $('.'+inputId+'-container').addClass('has-error');
                    $('.'+inputId+'-error').text(errors[input]);
                }
            }
            {{jsVisibility | raw}}
            if ((log != undefined) && (log == true)) {
                return errors;
            }
            if (!Object.keys) {
                Object.keys = function (obj) {
                    var arr = [], key;
                    for (key in obj) {
                        if (obj.hasOwnProperty(key)) {
                            arr.push(key);
                        }
                    }
                    return arr;
                };
            }
            return !Object.keys(errors).length;
        }
        $(function () {
            sergsxmUIFunctions.initWysiwyg('#{{formId}} textarea.form-wysiwyg');
            sergsxmUIFunctions.initFileUploadInput(
                '#{{formId}} input.form-file-upload', 
                '{{formId}}', 
                '{% trans with {'%name%': '%name%', '%size%': '%size%'} from "sergsxmui" %}%name% (%size% bytes){% endtrans %}', 
                '{% trans from "sergsxmui" %}File not selected{% endtrans %}', 
                formValidation_{{formId}},
                function (id, error) {
                    $('.'+id+'-container').addClass('has-error');
                    $('.'+id+'-error').text(error);
                }
            );
            sergsxmUIFunctions.initImageUploadInput(
                '#{{formId}} input.form-image-upload', 
                '{{formId}}', 
                '<div class="thumbnail sergsxmui-form-thumbnail"><img src="%thumbnail%" title="{% trans with {'%name%': '%name%', '%size%': '%size%'} from "sergsxmui" %}%name% (%size% bytes){% endtrans %}" /></div>', 
                '<div class="thumbnail sergsxmui-form-thumbnail"><img src="{{asset('bundles/sergsxmui/img/foo.png')}}" title="{% trans from "sergsxmui" %}File not selected{% endtrans %}" /></div>', 
                formValidation_{{formId}},
                function (id, error) {
                    $('.'+id+'-container').addClass('has-error');
                    $('.'+id+'-error').text(error);
                }
            );

            $('#{{formId}} input, #{{formId}} textarea, #{{formId}} select').change(function () {
                formValidation_{{formId}}(this);
            });
            $('#{{formId}}').submit(function () {
                return formValidation_{{formId}}();               
            });
            var form = document.forms['{{formId}}'];
            {{jsVisibility | raw}}
        });
    </script>
{% endblock %}